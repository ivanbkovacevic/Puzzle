{"version":3,"sources":["components/Square.js","components/Container.js","components/OriginalImage.js","App.js","serviceWorker.js","index.js","assets/mishuka.jpg"],"names":["Square","props","react_default","a","createElement","className","onClick","onSquareClick","class","src","slika","alt","Container","state","puzzle","i","emptySquare","_this","classClicked","Object","toConsumableArray","squareClicked","j","Math","abs","x","y","console","log","setState","this","clas","classArr","square","k","concat","push","pop","sort","random","indx","id","_this2","squareMaped","map","sq","Component","OriginalImage","App","components_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"4RAGeA,EAAA,SAACC,GACd,OAEUC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,QAASL,EAAMM,eAEpCL,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAMO,MAAOC,IAAKC,IAAOC,IAAI,cCyE7CC,6MA7EXC,MAAM,CACFC,OAAO,MAmCXP,cAAc,SAACQ,GAAI,IAIXC,EAHCF,EAAQG,EAAKJ,MAAbC,OAEDI,GADJJ,EAAOK,OAAAC,EAAA,EAAAD,CAAIL,IACaC,GAAGP,MAEvBa,EAAcP,EAAOC,GAEvB,IAAI,IAAIO,KAAKR,EACU,iBAAlBA,EAAOQ,GAAGd,QACTQ,EAAYF,EAAOQ,GAC0B,IAA9CC,KAAKC,IAAKH,EAAcI,EAAIT,EAAYS,IAAWJ,EAAcK,IAAMV,EAAYU,IAClFZ,EAAOC,GAAGP,MAAMQ,EAAYR,MAC5BQ,EAAYR,MAAMU,GAE2B,IAA9CK,KAAKC,IAAKH,EAAcK,EAAIV,EAAYU,IAAWL,EAAcI,IAAMT,EAAYS,IAClFX,EAAOC,GAAGP,MAAMQ,EAAYR,MAC5BQ,EAAYR,MAAMU,IAK1BS,QAAQC,IAAIZ,GAEVC,EAAKY,SAAS,CAACf,+FAvDD,IACbA,EAAQgB,KAAKjB,MAAbC,OACLA,EAAOK,OAAAC,EAAA,EAAAD,CAAIL,GAKX,IAJA,IAEIiB,EAFAC,EAAS,GACTC,EAAO,GAGHlB,EAAE,EAAGA,EAAE,EAAEA,IACf,IAAI,IAAImB,EAAE,EAAGA,EAAE,EAAGA,IACdH,EAAI,UAAAI,OAAWpB,GAAXoB,OAAeD,GACnBF,EAASI,KAAKL,GAElBC,EAASK,MACTL,EAASM,KAAK,kBAAIf,KAAKgB,SAAS,KAGlC,IAFE,IAAIC,EAAK,EAEHzB,EAAE,EAAGA,EAAE,EAAEA,IACf,IAAI,IAAImB,EAAE,EAAGA,EAAE,EAAGA,IACdD,EAAO,CAACQ,GAAG1B,EAAEU,EAAES,EAAER,EAAEX,EAAEP,MAAMwB,EAASQ,IACpC1B,EAAOsB,KAAKH,GACZO,IAIN1B,EAAOuB,MACPJ,EAAO,CAACQ,GAAG,EAAGhB,EAAE,EAAGC,EAAE,EAAGlB,MAAM,gBAC9BM,EAAOsB,KAAKH,GACZH,KAAKD,SAAS,CAACf,4CA+BR,IAAA4B,EAAAZ,KACDa,EAAYb,KAAKjB,MAAMC,OAAO8B,IAAI,SAACC,EAAG9B,GACtC,OACAb,EAAAC,EAAAC,cAACJ,EAAD,CAAQO,cAAe,kBAAImC,EAAKnC,cAAcQ,IAC7CU,EAAGoB,EAAGpB,EAAGC,EAAGmB,EAAGnB,EACflB,MAAOqC,EAAGrC,UAEf,OACIN,EAAAC,EAAAC,cAAA,WACKuC,UAxEOG,aCATC,EAAA,WACb,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBI,IAAKC,IAAOC,IAAI,cCc3CqC,mLAbX,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACTH,EAAAC,EAAAC,cAAC6C,EAAD,OAEN/C,EAAAC,EAAAC,cAAC2C,EAAD,cAPQD,aCOEI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.8a04d6fd.chunk.js","sourcesContent":["import React from 'react';\r\nimport slika from '../assets/mishuka.jpg'\r\n\r\nexport default (props) => {\r\n  return (\r\n  \r\n            <div className=\"square\" onClick={props.onSquareClick}>\r\n              \r\n               <img className={props.class} src={slika} alt='mishuka'></img>\r\n                </div>\r\n   \r\n  \r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport Square from './Square';\r\n\r\nclass Container extends Component {\r\n    state={\r\n        puzzle:[],\r\n    }\r\n\r\n    componentDidMount() {\r\n      let {puzzle}=this.state;\r\n      puzzle=[...puzzle];\r\n      let classArr=[];\r\n      let square={};\r\n      let clas;\r\n\r\n      for(let i=1; i<4;i++){\r\n        for(let k=1; k<4; k++){\r\n            clas=`square-${i}${k}`;\r\n            classArr.push(clas);\r\n        }}\r\n        classArr.pop();\r\n        classArr.sort(()=>Math.random()-0.5);\r\n        let indx=0;\r\n\r\n      for(let i=1; i<4;i++){\r\n        for(let k=1; k<4; k++){\r\n            square={id:i,x:k,y:i,class:classArr[indx]};\r\n            puzzle.push(square);    \r\n            indx++;\r\n        }\r\n      }\r\n    \r\n      puzzle.pop()\r\n      square={id:9, x:3, y:3, class:'square-empty'};\r\n      puzzle.push(square);\r\n      this.setState({puzzle})\r\n    }\r\n\r\n\r\n\r\n    onSquareClick=(i)=>{\r\n        let {puzzle}=this.state;\r\n        puzzle=[...puzzle];\r\n        let classClicked=puzzle[i].class;\r\n        let emptySquare;\r\n        let squareClicked=puzzle[i];\r\n          \r\n          for(let j in puzzle){\r\n            if(puzzle[j].class==='square-empty'){\r\n                emptySquare=puzzle[j];\r\n            if(Math.abs((squareClicked.x - emptySquare.x))===1 && squareClicked.y === emptySquare.y){\r\n                puzzle[i].class=emptySquare.class;\r\n                emptySquare.class=classClicked; \r\n            }\r\n            if(Math.abs((squareClicked.y - emptySquare.y))===1 && squareClicked.x === emptySquare.x){\r\n                puzzle[i].class=emptySquare.class;\r\n                emptySquare.class=classClicked; \r\n            }\r\n        }\r\n           }\r\n          \r\n        console.log(emptySquare)\r\n       \r\n          this.setState({puzzle})\r\n    }\r\n    \r\n    render() {\r\n        let squareMaped=this.state.puzzle.map((sq,i)=>{\r\n            return(\r\n            <Square onSquareClick={()=>this.onSquareClick(i)}\r\n             x={sq.x} y={sq.y} \r\n             class={sq.class}/>)\r\n        })\r\n        return (\r\n            <div >\r\n                {squareMaped}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport slika from '../assets/mishuka.jpg'\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"img-container\">\r\n          <img className=\"original-image\" src={slika} alt='mishuka'></img>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Container from './components/Container'\nimport OriginalImage from './components/OriginalImage'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"main-container\">\n          <div className=\"app__container\">\n                <Container/>\n          </div>\n          <OriginalImage/>\n               \n      </div>\n     \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mishuka.f86089db.jpg\";"],"sourceRoot":""}